@{
    Layout = "~/Views/Shared/MenuLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Menu</title>



    @Styles.Render("~/bundles/MenuPageStyles")



    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap"
          rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700&display=swap"
          rel="stylesheet" />

     
</head>

<body>




    <div id="main-scale" style="background-image: url(@ViewData["bannerImage"])">
        <div id="main-top">
            <div id="main-content">
                <h1 id="main-title">@ViewData["title"]</h1>
                <p id="main-tags">
                    @Html.Raw(@ViewData["tags"])
                </p>
            </div>
        </div>

    </div>





    <div id="select-main" class="select-disable sticky">
        <div id="select-scroll">
            <div class="select-gap select-arrow-width"></div>
            @Html.Raw(@ViewData["menuNavigaton"])
            <div class="select-gap select-arrow-width"></div>
        </div>
    </div>



    <div id="scroll-left" class="select-arrow select-arrow-width"></div>
    <div id="scroll-right" class="select-arrow right select-arrow-width"></div>




    <div id="main-container">


        <div id="main-menu">
            @Html.Raw(@ViewData["menuSections"])
        </div>

        <div id="basket-container" class="sticky">


            <span id="btn-shop-back">Back</span>

            <div id="basket-list">
                <div id="shop-more-container">
                    <span id="btn-shop-more">Shop More</span>
                </div>
                <table id="basket-table"></table>
                <div id="basket-empty">Your basket is empty</div>
            </div>
            <h3 id="basket-total">Total: <span id="basket-total-value"></span"></h3>
            <button class="item-btn basket-btn">Checkout</button>



            <script src="https://js.braintreegateway.com/web/dropin/1.27.0/js/dropin.min.js"></script>
            <form id="payment-form" action="/BrainTree/CreatePurchase" method="post">
                <!-- Putting the empty container you plan to pass to
        `braintree.dropin.create` inside a form will make layout and flow
        easier to manage -->
                <div id="dropin-container"></div>
                <input class="item-btn" id="btn-basket-submit" type="submit" />
                @Html.AntiForgeryToken()

                <input type="hidden" id="nonce" name="payment_method_nonce" />
            </form>

            <script type="text/javascript">
        const form = document.getElementById('payment-form');

        braintree.dropin.create({
            authorization: '@ViewData["ClientToken"]',
            container: '#dropin-container'
        }, (error, dropinInstance) => {

                if (error) console.error(error);

                form.addEventListener('submit', event => {
                    event.preventDefault();

                    dropinInstance.requestPaymentMethod((error, payload) => {
                        if (error) console.error(error);

                        // Step four: when the user is ready to complete their
                        //   transaction, use the dropinInstance to get a payment
                        //   method nonce for the user's selected payment method, then add
                        //   it a the hidden field before submitting the complete form to
                        //   a server-side integration
                        document.getElementById('nonce').value = payload.nonce;
                        form.submit();
                    });
                });


        });

            </script>

        </div>
    </div>
</body>



@Scripts.Render("~/bundles/MenuPageScripts")
</html>
